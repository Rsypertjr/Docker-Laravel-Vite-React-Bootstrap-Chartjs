version: '3'

networks:
  laravel:
    driver: bridge


services:
  nginx:
    build:
      context: ./docker
      dockerfile: nginx.dockerfile 
      args: 
        - UID=${UID:-1000}
        - GID=${GID:-1000} 
        - USER=${USER:-rsypertjr}
    restart: unless-stopped
    container_name: nginx 
    ports:
      - 8000:8000
    volumes:
      - ./src:/var/www/html
      - .env:/var/www/html/.env 
      - /etc/sysctl.conf:/etc/sysctl.conf
    depends_on: 
      - php 
      - redis 
      - mysql 
      - laravel-queue 
      - phpmyadmin 
      - mailhog 
    networks:
      - laravel

  php:
    build:
      context: ./docker 
      dockerfile: php.dockerfile 
      args: 
        - UID=${UID:-1000} 
        - GID=${GID:-1000} 
        - USER=${USER:-laravel}
    container_name: php
    ports:
      - 9000:9000
    volumes:
      - ./src:/var/www/html 
      - .env:/var/www/html/.env 
    networks:
      - laravel 

  mysql: 
    image: mariadb:latest
    restart: always
    environment:
      MARIADB_USER: ${DB_USERNAME}
      MARIADB_PASSWORD: ${DB_PASSWORD}
      MARIADB_DATABASE: ${DB_DATABASE}
      MARIADB_ROOT_PASSWORD: 
    ports:
      - "6033:3306"
    volumes:
      - ./docker/mysql:/var/lib/mysql 
    networks:
      - laravel 

  redis:
    image: redis:alpine 
    container_name: redis 
    restart: unless-stopped 
    ports:
     - 6380:6379 
    networks: 
     - laravel 

  laravel-cron:
    build: 
      context: ./docker 
      dockerfile: php.dockerfile 
      args: 
        - UID=${UID:-1000} 
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    container_name: laravel-cron 
    volumes: 
      - ./src:/var/www/html 
      - .env:/var/www/html/.env 
    depends_on: 
      - mysql 
    working_dir: /var/www/html 
    entrypoint: ['php', '/var/www/html/artisan', 'schedule:work']
    networks:
      - laravel

  laravel-queue:
    build: 
      context: ./docker 
      dockerfile: php.dockerfile 
      args: 
        - UID=${UID:-1000} 
        - GID=${GID:-1000} 
        - USER=${USER:-laravel} 
    container_name: laravel-queue 
    volumes: 
      - ./src:/var/www/html 
      - .env:/var/www/html/.env 
    depends_on: 
      - mysql 
    working_dir: /var/www/html 
    entrypoint: ['php', '/var/www/html/artisan', 'queue:work'] 
    networks: 
      - laravel

  mailhog:
    image: mailhog/mailhog:latest 
    container_name: mailhog 
    logging: 
      driver: 'none'
    ports: 
      - 1025:1025 
      - 8025:8025 
    networks: 
      - laravel

  
  laravel-migrate-seed:
    build:
      context: ./docker 
      dockerfile: php.dockerfile 
      args: 
        - UID=${UID:-1000} 
        - GID=${GID:-1000}
        - USER=${USER:-laravel} 
    container_name: laravel-migrate-seed 
    volumes: 
      - ./src:/var/www/html 
      - .env:/var/www/html/.env 
    depends_on: 
      - mysql
    working_dir: /var/www/html
    entrypoint: ["/bin/sh","-c"]
    command:
    - |
      php artisan migrate
      php artisan db:seed
    networks:
      - laravel

  
  composer:
    build: 
      context: ./docker 
      dockerfile: composer.dockerfile 
      args: 
        - UID=${UID:-1000} 
        - GID=${GID:-1000} 
        - USER=${USER:-laravel}
    container_name: composer 
    volumes: 
      - ./src:/var/www/html 
      - .env:/var/www/html/.env 
    working_dir: /var/www/html 
    depends_on:
      - php 
    user: ${USER:-laravel} #system user 
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks: 
      - laravel 


  artisan: 
    build: 
      context: ./docker 
      dockerfile: php.dockerfile 
      args:
       - UID=${UID:-1000} 
       - GID=${GID:-1000} 
       - USER=${USER:-laravel}
    container_name: artisan 
    volumes:
      - ./src:/var/www/html 
      - .env:/var/www/html/.env 
    depends_on:
      - mysql 
    working_dir: /var/www/html 
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel 

  
  npm:
    image: node:alpine 
    container_name: npm 
    volumes: 
      - ./src:/var/www/html 
      - .env:/var/www/html/.env 
    ports: 
      - 3000:3000
      - 3001:3001 
    working_dir: /var/www/html 
    entrypoint: ['npm'] 
    networks: 
      - laravel

  
  phpmyadmin:
    image: phpmyadmin:5.2.0
    container_name: phpmyadmin 
    environment: 
      PMA_ARBITRARY: 1 
      PMA_HOST: mysql
      PMA_PORT: 3306
    depends_on: 
      - mysql 
    ports: 
      - 8888:80 
    networks: 
      - laravel

